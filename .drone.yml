---
kind: pipeline
name: durl
clone:
  depth: 1
steps:
- name: durl
  image: quay.io/suzuki_shunsuke/durl:1.0.0
  commands:
  - sh scripts/durl.sh
---
kind: pipeline
name: build
clone:
  depth: 1
volumes:
- name: gopath
  temp: {}
steps:
- name: download go modules
  image: &image_go golang:1.13.5
  commands:
  - go mod download
  volumes: &volumes
  - name: gopath
    path: /go
  environment:
    GOPATH: /go

- name: install reviewdog
  image: *image_go
  commands:
  - wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s
  when: &pull_request
    event:
    - pull_request
- name: git diff master for reviewdog
  image: plugins/git
  commands:
  - git fetch
  - git diff origin/master | tee diff.txt
  when: *pull_request
- name: golangci-lint (pull request)
  image: golangci/golangci-lint:v1.21.0-alpine
  commands:
  - export CI_PULL_REQUEST="$DRONE_PULL_REQUEST"
  - export CI_REPO_OWNER="$DRONE_REPO_OWNER"
  - export CI_REPO_NAME="$DRONE_REPO_NAME"
  - export CI_COMMIT="$DRONE_COMMIT_SHA"
  - ./bin/reviewdog -reporter=github-pr-review -diff="cat diff.txt"
  - rm diff.txt
  volumes: *volumes
  environment:
    GOPATH: /go
    REVIEWDOG_GITHUB_API_TOKEN:
      from_secret: github_token
  when: *pull_request

- name: golangci-lint
  image: golangci/golangci-lint:v1.21.0-alpine
  commands:
  - golangci-lint run
  volumes: *volumes
  environment:
    GOPATH: /go
  when:
    event:
      exclude:
      - pull_request

- name: codecov
  image: *image_go
  commands:
  # bash and cgo seem to be required
  - bash scripts/codecov-test.sh
  - curl -s https://codecov.io/bash > /tmp/codecov.sh
  - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
  volumes: *volumes
  environment:
    GOPATH: /go
    CODECOV_TOKEN:
      from_secret: codecov_token
